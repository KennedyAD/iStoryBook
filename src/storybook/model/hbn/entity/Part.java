/*
Storybook: Open Source software for novelists and authors.
Copyright (C) 2008 - 2012 Martin Mustun

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package storybook.model.hbn.entity;

import java.sql.Timestamp;
import java.util.Date;

/**
 * Part generated by hbm2java
 *
 * @hibernate.class table="PART"
 */
@SuppressWarnings("serial")
public class Part extends AbstractEntity {

	private Integer number;
	private String name;
	private String notes;
	private Part superpart;
	private Timestamp creationTime;
	private Timestamp objectiveTime;
	private Timestamp doneTime;
	private Integer objectiveChars;

	public Part() {
		this.creationTime = new Timestamp(new Date().getTime());
	}

	public Part(Integer number, String name, String notes, Part superpart, Timestamp creationTime,
			Timestamp objectiveTime, Timestamp doneTime) {
		this.number = number;
		this.name = name;
		this.notes = notes;
		this.superpart = superpart;
		this.creationTime = creationTime;
		this.objectiveTime = objectiveTime;
		this.doneTime = doneTime;
	}

	@Override
	public boolean equals(Object obj) {
		if (!super.equals(obj)) {
			return false;
		}
		Part test = (Part) obj;
		boolean ret = true;
		ret = ret && equalsIntegerNullValue(number, test.getNumber());
		ret = ret && equalsStringNullValue(name, test.getName());
		ret = ret && equalsStringNullValue(notes, test.getNotes());
		ret = ret && equalsObjectNullValue(superpart, test.getSuperpart());
		return ret;
	}

	public Timestamp getCreationTime() {
		return creationTime;
	}

	public Timestamp getDoneTime() {
		return doneTime;
	}

	/**
	 * @hibernate.id column="ID" generator-class="increment"
	 *               unsaved-value="null"
	 */
	@Override
	public Long getId() {
		return this.id;
	}

	/**
	 * @hibernate.property
	 */
	public String getName() {
		return this.name;
	}

	/**
	 * @hibernate.property
	 */
	public String getNotes() {
		return this.notes;
	}

	/**
	 * @hibernate.property
	 */
	public Integer getNumber() {
		return this.number;
	}

	public String getNumberName() {
		return this.number + ": " + this.name;
	}

	public Integer getObjectiveChars() {
		return (hasObjectiveChars()) ? this.objectiveChars : 0;
	}

	public Timestamp getObjectiveTime() {
		return objectiveTime;
	}

	/**
	 * @hibernate.property
	 */
	public Part getSuperpart() {
		return this.superpart;
	}

	/**
	 * @hibernate.property
	 */
	public boolean hasCreationTime() {
		return creationTime != null;
	}

	public boolean hasDoneTime() {
		return doneTime != null;
	}

	@Override
	public int hashCode() {
		int hash = super.hashCode();
		hash = hash * 31 + (number != null ? number.hashCode() : 0);
		hash = hash * 31 + (name != null ? name.hashCode() : 0);
		hash = hash * 31 + (notes != null ? notes.hashCode() : 0);
		hash = hash * 31 + (superpart != null ? superpart.hashCode() : 0);
		return hash;
	}

	/**
	 * @hibernate.property
	 */
	public boolean hasObjectiveChars() {
		return objectiveChars != null;
	}

	/**
	 * @hibernate.property
	 */
	public boolean hasObjectiveTime() {
		return objectiveTime != null;
	}

	public boolean hasSuperpart() {
		return superpart != null;
	}

	/**
	 * @hibernate.property
	 */
	public boolean isDone() {
		return hasDoneTime();
	}

	public boolean isPartOfPart(Part ancestor) {
		if (this.getId().equals(ancestor.getId())) {
			return true;
		}
		if (this.hasSuperpart()) {
			return this.getSuperpart().isPartOfPart(ancestor);
		}
		return false;
	}

	public void setCreationTime(Timestamp ts) {
		creationTime = ts;
	}

	public void setDoneTime(Timestamp ts) {
		doneTime = ts;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	public void setNumber(Integer number) {
		this.number = number;
	}

	public void setObjectiveChars(Integer objectiveChars) {
		this.objectiveChars = objectiveChars;
	}

	public void setObjectiveTime(Timestamp ts) {
		objectiveTime = ts;
	}

	public void setSuperpart(Part superpart) {
		this.superpart = superpart;
	}

	@Override
	public String toString() {
		return getNumber() + ": " + getName();
	}
}
